From 7204abd06af20300608f9932c6bdd6923eae2348 Mon Sep 17 00:00:00 2001
From: Gatt <gatt@gatt.space>
Date: Sat, 8 Aug 2020 01:37:01 +1000
Subject: [PATCH] fix projectile motion


diff --git a/src/main/java/net/minecraft/server/EntityArrow.java b/src/main/java/net/minecraft/server/EntityArrow.java
index 0a3f84762..2ef064abc 100644
--- a/src/main/java/net/minecraft/server/EntityArrow.java
+++ b/src/main/java/net/minecraft/server/EntityArrow.java
@@ -105,9 +105,6 @@ public class EntityArrow extends Entity implements IProjectile {
     public void shoot(double d0, double d1, double d2, float f, float f1) {
         float f2 = MathHelper.sqrt(d0 * d0 + d1 * d1 + d2 * d2);
 
-        d0 /= (double) MinecraftServer.getMultiplier();
-        d1 /= (double) MinecraftServer.getMultiplier();
-        d2 /= (double) MinecraftServer.getMultiplier();
 
         d0 /= (double) f2;
         d1 /= (double) f2;
@@ -118,6 +115,7 @@ public class EntityArrow extends Entity implements IProjectile {
         d0 *= (double) f;
         d1 *= (double) f;
         d2 *= (double) f;
+
         this.motX = d0;
         this.motY = d1;
         this.motZ = d2;
@@ -331,9 +329,9 @@ public class EntityArrow extends Entity implements IProjectile {
                 }
             }
 
-            this.locX += this.motX;
-            this.locY += this.motY;
-            this.locZ += this.motZ;
+            this.locX += this.motX / (double) MinecraftServer.getMultiplier();
+            this.locY += this.motY / (double) MinecraftServer.getMultiplier();
+            this.locZ += this.motZ / (double) MinecraftServer.getMultiplier();
             f2 = MathHelper.sqrt(this.motX * this.motX + this.motZ * this.motZ);
             this.yaw = (float) (MathHelper.b(this.motX, this.motZ) * 180.0D / 3.1415927410125732D);
 
diff --git a/src/main/java/net/minecraft/server/EntityProjectile.java b/src/main/java/net/minecraft/server/EntityProjectile.java
index 6477e2f02..f0634ab98 100644
--- a/src/main/java/net/minecraft/server/EntityProjectile.java
+++ b/src/main/java/net/minecraft/server/EntityProjectile.java
@@ -59,9 +59,6 @@ public abstract class EntityProjectile extends Entity implements IProjectile {
     public void shoot(double d0, double d1, double d2, float f, float f1) {
         float f2 = MathHelper.sqrt(d0 * d0 + d1 * d1 + d2 * d2);
 
-        d0 /= (double) MinecraftServer.getMultiplier();
-        d1 /= (double) MinecraftServer.getMultiplier();
-        d2 /= (double) MinecraftServer.getMultiplier();
 
         d0 /= (double) f2;
         d1 /= (double) f2;
@@ -72,6 +69,7 @@ public abstract class EntityProjectile extends Entity implements IProjectile {
         d0 *= (double) f;
         d1 *= (double) f;
         d2 *= (double) f;
+
         this.motX = d0;
         this.motY = d1;
         this.motZ = d2;
@@ -105,6 +103,7 @@ public abstract class EntityProjectile extends Entity implements IProjectile {
             this.motX *= (double) (this.random.nextFloat() * 0.2F);
             this.motY *= (double) (this.random.nextFloat() * 0.2F);
             this.motZ *= (double) (this.random.nextFloat() * 0.2F);
+
             this.i = 0;
             this.ar = 0;
         } else {
@@ -172,16 +171,16 @@ public abstract class EntityProjectile extends Entity implements IProjectile {
             }
         }
 
-        this.locX += this.motX;
-        this.locY += this.motY;
-        this.locZ += this.motZ;
+        this.locX += this.motX / (double) MinecraftServer.getMultiplier();;
+        this.locY += this.motY / (double) MinecraftServer.getMultiplier();;
+        this.locZ += this.motZ / (double) MinecraftServer.getMultiplier();;
         float f1 = MathHelper.sqrt(this.motX * this.motX + this.motZ * this.motZ);
 
         this.yaw = (float) (MathHelper.b(this.motX, this.motZ) * 180.0D / 3.1415927410125732D);
 
-        for (this.pitch = (float) (MathHelper.b(this.motY, (double) f1) * 180.0D / 3.1415927410125732D); this.pitch - this.lastPitch < -180.0F; this.lastPitch -= 360.0F) {
-            ;
-        }
+        /*for (this.pitch = (float) (MathHelper.b(this.motY, (double) f1) * 180.0D / 3.1415927410125732D); this.pitch - this.lastPitch < -180.0F; this.lastPitch -= 360.0F) {
+
+        }*/
 
         while (this.pitch - this.lastPitch >= 180.0F) {
             this.lastPitch += 360.0F;
diff --git a/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java b/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java
index b7a0f76dc..1ce4de180 100644
--- a/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java
+++ b/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java
@@ -396,7 +396,7 @@ public class CraftScheduler implements BukkitScheduler {
     }
 
     private CraftTask handle(final CraftTask task, long delay) {
-        //if (delay > 0) delay = delay * (MinecraftServer.getMultiplier());
+        if (delay > 0) delay = delay * (MinecraftServer.getMultiplier());
         //task.setPeriod(task.getPeriod() * (MinecraftServer.getMultiplier()));
         task.setNextRun(currentTick + delay);
         addTask(task);
diff --git a/src/main/java/org/bukkit/craftbukkit/scheduler/CraftTask.java b/src/main/java/org/bukkit/craftbukkit/scheduler/CraftTask.java
index 4b1e35236..7943e8998 100644
--- a/src/main/java/org/bukkit/craftbukkit/scheduler/CraftTask.java
+++ b/src/main/java/org/bukkit/craftbukkit/scheduler/CraftTask.java
@@ -1,5 +1,6 @@
 package org.bukkit.craftbukkit.scheduler;
 
+import net.minecraft.server.MinecraftServer;
 import org.bukkit.Bukkit;
 import co.aikar.timings.SpigotTimings; // Spigot
 import co.aikar.timings.Timing; // Spigot
@@ -61,7 +62,7 @@ public class CraftTask implements BukkitTask, Runnable { // Spigot
     }
 
     long getPeriod() {
-        return period;
+        return period * MinecraftServer.getMultiplier();
     }
 
     void setPeriod(long period) {
-- 
2.24.1.windows.2

