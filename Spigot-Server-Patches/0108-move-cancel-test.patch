From d6d96eadf0f24cfab5eeaec4c0a7ca8a20995508 Mon Sep 17 00:00:00 2001
From: Gatt <gatt@gatt.space>
Date: Wed, 22 Jul 2020 18:59:02 +1000
Subject: [PATCH] move cancel test

cancel if theres a move pos

move that down a bit

interesting

mhmm

hmm

idk

diff --git a/src/main/java/net/minecraft/server/EntityHuman.java b/src/main/java/net/minecraft/server/EntityHuman.java
index 0ad4edb83..fad0d7e60 100644
--- a/src/main/java/net/minecraft/server/EntityHuman.java
+++ b/src/main/java/net/minecraft/server/EntityHuman.java
@@ -1480,7 +1480,6 @@ public abstract class EntityHuman extends EntityLiving {
         if (!this.abilities.isFlying) {
             super.aA();
         }
-
     }
 
     public ItemStack q(int i) {
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index be296d6e8..c018f9d94 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -219,6 +219,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
                 double d5 = packetplayinflying.b() - this.p;
                 double d6 = packetplayinflying.c() - this.q;
 
+
                 if (packetplayinflying.g()) {
                     d3 = d4 * d4 + d5 * d5 + d6 * d6;
                     if (!this.checkMovement && d3 < 0.25D) {
@@ -242,8 +243,9 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
                 Location from = new Location(player.getWorld(), lastPosX, lastPosY, lastPosZ, lastYaw, lastPitch); // Get the Players previous Event location.
                 Location to = player.getLocation().clone(); // Start off the To location as the Players current location.
 
+
                 // If the packet contains movement information then we update the To location with the correct XYZ.
-                if (packetplayinflying.hasPos && !(packetplayinflying.hasPos && packetplayinflying.y == -999.0D)) {
+                if (packetplayinflying.hasPos && !(packetplayinflying.y == -999.0D)) {
                     to.setX(packetplayinflying.x);
                     to.setY(packetplayinflying.y);
                     to.setZ(packetplayinflying.z);
@@ -255,6 +257,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
                     to.setPitch(packetplayinflying.pitch);
                 }
 
+
                 // Prevent 40 event-calls for less than a single pixel of movement >.>
                 double delta = Math.pow(this.lastPosX - to.getX(), 2) + Math.pow(this.lastPosY - to.getY(), 2) + Math.pow(this.lastPosZ - to.getZ(), 2);
                 float deltaAngle = Math.abs(this.lastYaw - to.getYaw()) + Math.abs(this.lastPitch - to.getPitch());
@@ -266,6 +269,13 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
                     this.lastYaw = to.getYaw();
                     this.lastPitch = to.getPitch();
 
+                    if (to.distance(from) > 0 && !getPlayer().canMove() ){//hard stop.
+                        this.player.playerConnection.sendPacket(new PacketPlayOutPosition(d0, d1, d2,
+                                to.getYaw(),
+                                to.getPitch(), Collections.emptySet()));
+                        return;
+                    }
+
                     Location oldTo = to.clone();
                     PlayerMoveEvent event = new PlayerMoveEvent(player, from, to);
                     this.server.getPluginManager().callEvent(event);
-- 
2.24.1.windows.2

